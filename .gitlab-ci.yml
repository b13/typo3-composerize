stages:
  - prepare
  - lint
  - test
  - publish

composer_install:
  image: composer:2
  stage: prepare
  script:
    - composer install --no-ansi
  artifacts:
    untracked: true
    expire_in: 1 day

php_stan:
  image: composer:2
  stage: lint
  needs: ["composer_install"]
  script:
    - ./vendor/bin/phpstan analyse --no-progress Classes/ Tests/Unit
  artifacts:
    reports:
      codequality: gl-phpstan-report.json
    paths: [gl-phpstan-report.json]

php-cs-fixer:
  image: composer:2
  stage: lint
  needs: ["composer_install"]
  script:
    - ./vendor/bin/php-cs-fixer fix -v --dry-run --diff --using-cache false

.phpunit: &phpunit
  image: registry.b13.com/jroth/typo3_composerize:php74
  stage: test
  artifacts:
    when: always
    paths:
      - phpunit-report.xml
    reports:
      junit: phpunit-report.xml
  script:
    - ./vendor/bin/phpunit --coverage-text --log-junit phpunit-report.xml

phpunit:7.4:
  image: registry.b13.com/jroth/typo3_composerize:php74
  <<: *phpunit

phpunit:8.0:
  image: registry.b13.com/jroth/typo3_composerize:php80
  <<: *phpunit

publish:
  image: curlimages/curl:latest
  stage: publish
  only:
    - tags
  variables:
    URL: "$CI_SERVER_PROTOCOL://$CI_SERVER_HOST:$CI_SERVER_PORT/api/v4/projects/$CI_PROJECT_ID/packages/composer?job_token=$CI_JOB_TOKEN"
  script:
    - version=$([[ -z "$CI_COMMIT_TAG" ]] && echo "branch=$CI_COMMIT_REF_NAME" || echo "tag=$CI_COMMIT_TAG")
    - insecure=$([ "$CI_SERVER_PROTOCOL" = "http" ] && echo "--insecure" || echo "")
    - response=$(curl -s -w "\n%{http_code}" $insecure --data $version $URL)
    - code=$(echo "$response" | tail -n 1)
    - body=$(echo "$response" | head -n 1)
    # Output state information
    - if [ $code -eq 201 ]; then
      echo "Package created - Code $code - $body";
      else
      echo "Could not create package - Code $code - $body";
      exit 1;
      fi
